1) Using strace 

To obtain the PC value from which a system call was invoked in a CPS program, we need to go back through the call stacks until finding a valid PC along with each system call. Therefore, we compiled strace with -libunwind support, which enables stack unwinding, so as to print call stacks (libunwind-based backtraces) on every system call. 

For example:
we use strace-4.13 to trace system calls
strace -k  -i  -tt -T -o ./strace.log ./test
we get the system call traces with call stacks like the following:
18:21:17.042053 [00007ffff7b0987a] mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ffff7ff5000 <0.000028>
 > /lib/x86_64-linux-gnu/libc-2.19.so(mmap64+0xa) [0xf487a]
 > /lib/x86_64-linux-gnu/libc-2.19.so(_IO_file_doallocate+0x7c) [0x6d82c]
 > /lib/x86_64-linux-gnu/libc-2.19.so(_IO_doallocbuf+0x35) [0x7b4a5]
 > /lib/x86_64-linux-gnu/libc-2.19.so(_IO_file_overflow+0x198) [0x7a858]
 > /lib/x86_64-linux-gnu/libc-2.19.so(_IO_file_xsputn+0xb1) [0x795a1]
 > /lib/x86_64-linux-gnu/libc-2.19.so(_IO_vfprintf+0x1cc5) [0x4b905]
 > /lib/x86_64-linux-gnu/libc-2.19.so(_IO_printf+0x99) [0x543d9]
 > /home/SIR/objects/gzip/source/gzip.exe(help+0x33) [0x8b2e]
 > /home/SIR/objects/gzip/source/gzip.exe(main+0x307) [0x8f93]
 
 
 2) Using SystemTap
 
 Here is a good example of using SystemTap for system call tracing:
 
 https://sourceware.org/systemtap/examples/process/strace.stp
 process/strace.stp - Trace system calls
 The script loosely emulates strace, when applied to individual processes or hierarchies (via -c/-x), or the entire system (without -c/-x). A few output configuration parameters may be set with -G.

